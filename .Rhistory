library(sf)
library(ggplot2)
st_read("data/PhillyCrimerate/", quiet = TRUE)
st_read("Shapefiles/Landuse.shp", quiet = TRUE)
LandUse<- st_read("Shapefiles/Landuse.shp", quiet = TRUE)
plot(LandUse)
plot(LandUse$geometry)
plot(LandUse$LU_Type)
plot(LandUse$N_Value)
plot(LandUse$geometry)
plot(LandUse)
ggplot() + geom_sf(data = Boundary_Layer)
ggplot() + geom_sf(data = Habitation)
ggplot() + geom_sf(data = Habitation) + geom_sf(Road_Network)
ggplot() + geom_sf(data = Habitation) + geom_sf(data = Road_Network)
plot(Habitation)
plot(Habitation$Population)
ggplot() + geom_sf(data = Habitation) + geom_sf(data = Road_Network)
ggplot() + geom_sf(data = Habitation, mapping = aes(population)) + geom_sf(data = Road_Network)
ggplot() + geom_sf(data = Habitation, mapping = aes(x = Population)) + geom_sf(data = Road_Network)
ggplot() + geom_sf(data = Habitation)) + geom_sf(data = Road_Network)
ggplot() + geom_sf(data = Habitation) + geom_sf(data = Road_Network)
st_multipoint(x = matrix(numeric(0), 0, 2), dim = "XYZ")
st_multipoint(x = matrix(numeric(1), 0, 2), dim = "XYZ")
st_polygon(x = list(c(1,0), (1,1), (2,1), (3,5), (4,4)))
st_polygon(x = list((1,0), (1,1), (2,1), (3,5), (4,4)))
st_polygon(x = list(c((1,0), (1,1), (2,1), (3,5), (4,4)))
st_polygon(x = list(c(1,0), c(1,1), c(2,1), c(3,5), c(4,4)))
st_polygon(x = matrix(c(1,0), c(1,1), c(2,1), c(3,5), c(4,4), nrow = 5, ncol =2))
st_polygon(x = matrix(c(1,0), c(1,1), c(2,1), c(3,5), c(4,4), nrow = 6, ncol =2))
st_polygon(x = matrix(c(1,0), c(1,1), c(2,1), c(3,5), c(4,4), ncol =2))
st_polygon(x = matrix(c(1,0), c(1,1), c(2,1), c(3,5), c(4,4))
)
st_polygon(x = matrix(c(1,0), c(1,1), c(2,1), c(3,5), c(4,4)))
MULTIPOINT ((1 6), (2 7), (3 8), (4 9), (5 10))
MULTIPOINT ((1,6), (2, 7), (3, 8), (4, 9), (5, 10))
ggplot() + geom_sf(data = Habitation), colour="red") + geom_sf(data = Road_Network)
ggplot() + geom_sf(data = Habitation)) + geom_sf(data = Road_Network)+geom_sf_label(data = Habitation)
ggplot() + geom_sf(data = Habitation) + geom_sf(data = Road_Network)+geom_sf_label(data = Habitation)
ggplot() + geom_sf(data = Habitation) + geom_sf(data = Road_Network)
ggplot() + geom_sf(data = Habitation) + geom_sf(data = Road_Network)+geom_sf_label()
install.packages("tmap")
library(tmap)
tmap_arrange(Boundary_Layer)
tmaptools::approx_areas(Boundary_Layer )
tmaptools::approx_areas(LandUse )
View(LandUse)
library(tmaptools)
tmapOutput(LandUse)
tmapOutput(LandUse, outputId = geometry)
tm_shape(LandUse)
tm_shape(LandUse$LU_Type)
tm_shape(LandUse$geometry)
tm_shape(LandUse$geometry)+tm_dots()
tm_shape(LandUse)+tm_dots()
tm_shape(LandUse)+tm_polygons()
tm_shape(LandUse)+tm_polygons(col = "MAPCOLORS")
tm_shape(LandUse)+tm_polygons(col = "MAP_COLORS")
tm_shape(LandUse)+tm_polygons(col = "MAP_COLORS") +tm_add_legend()
tm_shape(LandUse)+tm_polygons(col = "MAP_COLORS")
tm_shape(LandUse)+tm_polygons(col = "MAP_COLORS")+tm_scale_bar()
tm_shape(LandUse)+tm_polygons(col = "MAP_COLORS")+tm_scale_bar()+tm_add_legend(type = "fill",labels = LandUse$LU_Type, col = "MAP_COLORS")
tm_shape(LandUse)+tm_polygons(col = "MAP_COLORS")+tm_scale_bar()+tm_add_legend(type = "fill",labels = LandUse$LU_Type)
tm_shape(LandUse)+tm_polygons(col = "MAP_COLORS")+tm_scale_bar()+tm_add_legend(type = "fill",labels = LandUse$LU_Type)+tm_compass(north = TRUE)
tm_shape(LandUse)+tm_polygons(col = "MAP_COLORS")+tm_scale_bar()+tm_add_legend(type = "fill",labels = LandUse$LU_Type)+tm_compass(north = north)
tm_shape(LandUse)+tm_polygons(col = "MAP_COLORS")+tm_scale_bar()+tm_add_legend(type = "fill",labels = LandUse$LU_Type)+tm_compass()
tm_shape(LandUse)+tm_polygons(col = "MAP_COLORS")+tm_scale_bar()+tm_add_legend(type = "fill",labels = LandUse$LU_Type)+tm_compass() + tm_graticules()
library(sf)
library(raster)
ls()
ls()
library(ggplot2)
data("mtcars")
plot(mtcars$mpg~mtcars$disp)
plot(mtcars$mpg~mtcars$disp, ylab= "displacement", xlab= "MPG")
plot(mtcars$mpg~mtcars$disp, ylab= "displacement", xlab= "MPG", title= "Displacement against Mileage of Cars")
plot(mtcars$mpg~mtcars$disp, ylab= "displacement", xlab= "MPG", main= "Displacement against Mileage of Cars")
plot(mtcars$mpg~mtcars$disp, ylab= "displacement", xlab= "MPG", main= "Displacement against Mileage of Cars", xlim= c(19, 40), pch = 10, col = "red")
plot(mtcars$mpg~mtcars$disp, ylab= "displacement", xlab= "MPG", main= "Displacement against Mileage of Cars", ylim= c(19, 40), pch = 10, col = "red")
plot(mtcars$mpg~mtcars$disp, ylab= "displacement", xlab= "MPG", main= "Displacement against Mileage of Cars", ylim= c(0, 40), pch = 10, col = "red")
abline (lm(mpg~disp), col = c("red"))
abline (lm(mpg~disp), col = "red")
abline (lm(mpg~disp), data = mtcars, col = "red")
abline (lm(mpg~disp),data = mtcars, col = "red")
data("mtcars")
abline (lm(mpg~disp, data = mtcars), col = "red")
wd()
getwd()
ggplot(data = mtcars, mapping = aes(x = mpg, y=disp))
ggplot(data = mtcars, mapping = aes(x = mpg, y=disp)) + geom_point()
ggplot(data = mtcars, mapping = aes(x = mpg, y=disp)) + geom_point(show.legend = TRUE)
ggplot(data = mtcars, mapping = aes(x = mpg, y=disp)) + geom_point()+ scale_fill_discrete()
ggplot(data = mtcars, mapping = aes(x = mpg, y=disp)) + geom_point()+ scale_fill_discrete(fill = TRUE)
ggplot(data = mtcars, mapping = aes(x = mpg, y=disp)) + geom_point()+ guides()
ggplot(data = mtcars, mapping = aes(x = mpg, y=disp)) + geom_point()+ guides(fill = TRUE)
plot(mtcars$mpg~mtcars$disp, ylab= "displacement", xlab= "MPG", main= "Displacement against Mileage of Cars", ylim= c(0, 40), pch = 10, col = "red")
plot(mtcars$mpg~mtcars$disp, ylab= "displacement", xlab= "MPG", main= "Displacement against Mileage of Cars", ylim= c(0, 40), pch = 12, col = "green")
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
grid(nx = 5, ny = 5, col = "lightgray", lty = "solid")
plot.new()
plot(mtcars$mpg~mtcars$disp, ylab= "displacement", xlab= "MPG", main= "Displacement against Mileage of Cars", ylim= c(0, 40), pch = 10, col = "red")
grid(nx = 5, ny = 5, col = "lightgray", lty = "solid")
plot(mtcars$mpg~mtcars$disp, ylab= "displacement", xlab= "MPG", main= "Displacement against Mileage of Cars", ylim= c(0, 40), pch = 10, col = "red", bgcolor = "grey")
Plot_X<- plot(mtcars$mpg~mtcars$disp, ylab= "displacement", xlab= "MPG", main= "Displacement against Mileage of Cars", ylim= c(0, 40), pch = 10, col = "red", bgcolor = "grey")
View(Plot_X)
Plot_X<- plot(mtcars$mpg~mtcars$disp, ylab= "displacement", xlab= "MPG", main= "Displacement against Mileage of Cars", ylim= c(0, 40), pch = 10, col = "red")
Plot_X
plot(Plot_X)
ggplot(data = Plot_X)
plot(mtcars$mpg~mtcars$disp, ylab= "displacement", xlab= "MPG", main= "Displacement against Mileage of Cars", ylim= c(0, 40), pch = 10, col = "red")
View(pressure)
ggplot(data = pressure, mapping = aes(x = temperature, y = pressure)) +geom_point()
ggplot(data = pressure, mapping = aes(x = temperature, y = pressure)) +geom_point(colour="red")
ggplot(data = pressure, mapping = aes(x = temperature, y = pressure)) +geom_point(colour="red")+ geom_line(colour = "magenta")
ggplot(data = pressure, mapping = aes(x = temperature, y = pressure)) +geom_point(colour="red")+ geom_line(colour = "magenta")+ title(main = "Temperatre vs Pressure")
ggplot(data = pressure, mapping = aes(x = temperature, y = pressure)) +geom_point(colour="red")+ geom_line(colour = "magenta")+ title(main = "Temperatre vs Pressure")+grid
ggplot(data = pressure, mapping = aes(x = temperature, y = pressure)) +geom_point(colour="red")+ geom_line(colour = "magenta")+ title(main = "Temperatre vs Pressure")+grid()
ggplot(data = pressure, mapping = aes(x = temperature, y = pressure)) +geom_point(colour="red")+ geom_line(colour = "magenta")+ title(main = "Temperatre vs Pressure")+ggtitle(label = "Pressure vs Temperature")
View(mtcars)
table(mtcars$cyl)
ggplot(data = mtcars, mapping = aes(x = c(4, 6, 8), y= table(mtcars$cyl)) + geom_boxplot()
)
ggplot(data = mtcars, mapping = aes(x = c(4, 6, 8), y= table(mtcars$cyl)) + geom_bar()
ggplot(data = mtcars, mapping = aes(x = c(4, 6, 8), y= table(mtcars$cyl))) + geom_bar()
ggplot(data = mtcars, mapping = aes(x = c(4, 6, 8), y= table(cyl))) + geom_bar()
ggplot(data = table(mtcars$cyl), mapping = aes(x = c(4, 6, 8)) + geom_bar()
ggplot(data = table(mtcars$cyl), mapping = aes(x = c(4, 6, 8),y= table(mtcars$cyl))) + geom_bar()
ggplot(data = table(mtcars$cyl)) + geom_bar()
barplot(table(mtcars$cyl))
ggplot() + aes(x = c(4,6,8), y= (table(mtcars$cyl))) + geom_bar()
ggplot(data = mtcars) + geom_bar()
ggplot(data = mtcars) + geom_bar(mapping = aes(x = cyl, y = stat_count(data = mtcars$cyl)))
ggplot(data = mtcars) + geom_bar(mapping = aes(x = cyl, y =table(data = mtcars$cyl)))
ggplot(data = mtcars) + geom_bar(mapping = aes(x = cyl, y =table(data = cyl)))
ggplot(data = mtcars, mapping = aes(mpg, cyl))+geom_boxplot()
ggplot(data = mtcars, mapping = aes(cyl))+geom_boxplot()
boxplot(mtcars$cyl)
boxplot(table(mtcars$cyl))
plot(hp~mpg, data = mtcars)
plot(hp~mpg, data = mtcars, pch = 10, col = green, lty = 2)
plot(hp~mpg, data = mtcars, pch = 10, col = "green", lty = 2)
plot(hp~mpg, data = mtcars, pch = 10, col = "green", lty = 1)
plot(hp~mpg, data = mtcars, pch = 10, col = "green")
help(plot)
plot(hp~mpg, data = mtcars, pch = 10, col = "green" )
abline(lm(hp~mg, data = mtcars), col = c("green"))
abline(lm(hp~mpg, data = mtcars), col = c("green"))
ggplot(data = mtcars, mapping = aes(x = mpg, y = cyl))+geom_point()
ggplot(data = mtcars, mapping = aes(x = hp, y = mpg))+geom_point()
ggplot(data = mtcars, mapping = aes(x = hp, y = mpg))+geom_point()+geom_smooth(method = "lm")
ggplot(data = mtcars, mapping = aes(x = hp, y = mpg))+geom_point()+geom_abline()
ggplot(data = mtcars, mapping = aes(x = hp, y = mpg))+geom_point()+geom_abline()
lm(mpg~hp, data = mtcars)
ggplot(data = mtcars, mapping = aes(x = hp, y = mpg))+geom_point()+geom_abline(slope = -0.06823, intercept =  30.09886)
object_ggplot<- ggplot(data = mtcars, mapping = aes(x = hp, y = mpg))+geom_point()
object_ggplot
object_ggplot + geom_abline(slope = -0.06823, intercept = 30.09886)
names(mtcars)
rownames(mtcars)
ggplot(data = mtcars, mapping = aes(x = mpg, y=rownames(mtcars)))
ggplot(data = mtcars, mapping = aes(x=rownames(mtcars)), y= mpg)
ggplot(data = mtcars, mapping = aes(x=rownames(mtcars)), y= mpg) + geom_bar()
ggplot(data = mtcars, mapping = aes(x=cyl), y= mpg) + geom_bar()
ggplot(data = mtcars, mapping = aes(x=cyl), y= mpg) + geom_bar(colour = "green")
ggplot(data = mtcars, mapping = aes(x=cyl), y= mpg) + geom_bar(fill = "green")
ggplot(data = mtcars, mapping = aes(x=cyl), y= mpg) + geom_bar(fill = c("green", "blue", "red"))
ggplot(data = mtcars, mapping = aes(x=cyl), y= mpg) + geom_bar(fill = c("green", "blue", "red"), stat="identity")
ggplot(data = mtcars, mapping = aes(x=cyl), y= mpg) + geom_bar(fill = c("green", "blue", "red"))
ggplot(data = mtcars, mapping = aes(x=hp, y = mpg)) + geom_bar()
ggplot(data = mtcars, mapping = aes(x=hp, y = mpg)) + geom_point()
ggplot(data = mtcars, mapping = aes(x=hp, y = mpg)) + geom_bar(stat = "identity")
ggplot(data = mtcars, mapping = aes(x=hp, y = mpg)) + geom_bar(stat = "identity", width = 10)
ggplot(data = mtcars, mapping = aes(x=hp, y = mpg)) + geom_bar(stat = "identity", width = 2)
ggplot(data = mtcars, mapping = aes(x=hp, y = mpg)) + geom_bar(stat = "identity", width = 2, colour = "red")
ggplot(data = mtcars, mapping = aes(x=hp, y = mpg)) + geom_bar(stat = "identity", width = 1, colour = "red")
ggplot(data = mtcars, mapping = aes(x=hp, y = mpg)) + geom_bar(stat = "identity", width = 1, colour = "red", fill = "red")
ggplot(data = mtcars, mapping = aes(x=hp, y = mpg)) + geom_bar( width = 1, colour = "red", fill = "red")
ggplot(data = mtcars, mapping = aes(x=cyl), y= mpg) + geom_bar()
ggplot(data = mtcars, mapping = aes(x=cyl), y= mpg) + geom_bar(stat = "identity")
ggplot(data = mtcars, mapping = aes(x=cyl), y= mpg) + geom_bar()
ggplot(data = mtcars, mapping = aes(x=cyl), y= mpg) + geom_bar(width = 1)
ggplot(data = mtcars, mapping = aes(x=cyl), y= mpg) + geom_bar(width = 1)+ theme(axis.text.x= element_text(family, face, colour, size))
ggplot(data = mtcars, mapping = aes(x=cyl), y= mpg) + geom_bar(width = 1)+ theme(axis.text.x = element_text(face="bold", color="#993333", size=14, angle=45)
)
ggplot(data = mtcars, mapping = aes(x=cyl), y= mpg) + geom_bar(width = 1)+ theme(axis.text.x = element_text(face="bold", color="#993333", size=12, angle=45))
ggplot(data = mtcars, mapping = aes(x=cyl), y= mpg) + geom_histogram(width = 1)+ theme(axis.text.x = element_text(face="bold", color="#993333", size=14, angle=45)
)
ggplot(data = mtcars, mapping = aes(x=cyl), y= mpg) + geom_histogram()
ggplot(data = mtcars, mapping = aes(x=cyl)) + geom_histogram()
ggplot(data = mtcars, mapping = aes(x=cyl)) + geom_histogram(binwidth = 3)
ggplot(data = mtcars, mapping = aes(x=cyl)) + geom_histogram(binwidth = 1)
table(mtcars)
table(mtcars$mpg)
table(mtcars$disp)
table(mtcars$cyl)
ggplot(data = mtcars, mapping = aes(x=disp)) + geom_histogram(binwidth = 1)
ggplot(data = mtcars, mapping = aes(x=disp)) + geom_histogram(binwidth = 4)
ggplot(data = mtcars, mapping = aes(x=disp)) + geom_bar(stat = "identity")
ggplot(data = mtcars, mapping = aes(x=disp)) + geom_bar()
ggplot(data = mtcars, mapping = aes(x=disp)) + geom_bar(width = 3)
ggplot(data = mtcars, mapping = aes(x=disp)) + geom_bar(width = 2)
ggplot(data = mtcars, mapping = aes(x=disp, y= mpg)) + geom_bar(width = 2)
ggplot(data = mtcars, mapping = aes(x=mpg, y= hp)) + geom_bar(width = 2)
ggplot(data = mtcars, mapping = aes(x=mpg, y= hp)) + geom_bar()
ggplot(data = mtcars, mapping = aes(x=mpg, y= hp)) + geom_bar(stat="identity")
ggplot(data = mtcars, mapping = aes(x=mpg, y= hp)) + geom_bar(stat="identity", width = 3)
ggplot(data = mtcars, mapping = aes(x=mpg, y= hp)) + geom_bar(stat="identity", width = 2)
ggplot(data = mtcars, mapping = aes(x=mpg, y= hp)) + geom_bar(stat="identity", width = 1)
ggplot(data = mtcars, mapping = aes(x=mpg, y= hp)) + geom_bar(stat="identity", width = 0.5)
ggplot(data = mtcars, mapping = aes(x=mpg, y= hp)) + geom_bar(stat="identity", width = 1)
ggplot(data = mtcars, mapping = aes(x=mpg, y= hp)) + geom_bar(stat="identity", width = 0.2)
count(mtcars$mpg)
cut_interval(mtcars$mpg)
cut_interval(mtcars$mpg, n = 5)
ggplot(data = mtcars, mapping = aes(x=cut_interval(mtcars$mpg, n = 5), y= hp)) + geom_bar(stat="identity", width = 0.2)
ggplot(data = mtcars, mapping = aes(x=cut_interval(mpg, n = 5), y= hp)) + geom_bar(stat="identity", width = 0.2)
ggplot(data = mtcars, mapping = aes(x=cut_interval(mpg, n = 5), y= hp)) + geom_bar(stat="identity", width = 0.2)+xlab(label = "MPG interval")
ggplot(data = mtcars, mapping = aes(x=cut_interval(mpg, n = 5), y= hp)) + geom_histogram(binwidth = 0.2)+xlab(label = "MPG interval")
ggplot(data = mtcars, mapping = aes(x=cut_interval(mpg, n = 5), y= hp)) + geom_histogram(binwidth = 1)+xlab(label = "MPG interval")
ggplot(data = mtcars, mapping = aes(x=cut_interval(mpg, n = 5), y= hp)) + geom_histogram()+xlab(label = "MPG interval")
ggplot(data = mtcars, mapping = aes(x=mpg, y= hp)) + geom_histogram()+xlab(label = "MPG interval")
ggplot(data = mtcars, mapping = aes(x=mpg, y= hp)) + geom_histogram(binwidth = 5)+xlab(label = "MPG interval")
data("BJsales")
View(BJsales)
str(BJsales)
plot(BJsales)
ggplot(mtcars, aes(x=wt, y=mpg, shape=cyl, color=cyl)) +geom_point()
ggplot(mtcars, aes(x=wt, y=mpg, shape=cyl, color=cyl, size=cyl)) +
geom_point()
ggplot(data=mtcars, aes(x=wt, y=mpg, shape=cyl, color=cyl, size=cyl)) +
geom_point()
rlang::last_error()
ggplot(data=mtcars, aes(x=wt, y=mpg, shape= 24, color="darkred", size=3)) +
geom_point()
ggplot(data=mtcars, aes(x=wt, y=mpg, shape= 22, color="darkred", size=3)) +
geom_point()
ggplot(data=mtcars, aes(x=wt, y=mpg) +
geom_point( shape= 22, color="darkred", size=3))
ggplot(data=mtcars, aes(x=wt, y=mpg)) +
geom_point( shape= 22, color="darkred", size=3)
ggplot(data=mtcars, aes(x=wt, y=mpg)) +
geom_point( shape= 22, color="darkred", fill = "red", size=2)
q()
attr(mtcars )
attr(mtcars, which = mpg )
attr(mtcars, which = numeric() )
vector<- c(1:10)
attributes(vector)
str(attributes(vector))
attributes(pressure)
str(vector)
class(vector)
class(mtcars)
str(BJsales)
View(BJsales)
is.list(BJsales)
is.factor(BJsales)
as.factor(1:5)
list_info <- list("Blue", "Yellow", c(12, 13, 14), TRUE, 13.12, 103.4)
is.array(list_info)
is.list(list_info)
ls.str()
ls.str(pressure)
is.atomic(pressure)
is.atomic(list_info)
as.matrix(pressure)
View(list_info)
is.list(Road_Network)
is.list(mtcars)
is.data.frame(pressure)
str(pressure)
ls.str()
ls()
test_func<- function (input)
if (is.matrix(input)==TRUE)
cat("Your variable " input " is a matrix")
else if (is.data.frame(input)==TRUE)
cat ("Your variable " input " is a dataframe \n")
else ("Your variable " input " is neither a matrix nor a dataframe \n")
test_func<- function (input)
if (is.matrix(input)==TRUE)
cat("Your variable " input " is a matrix")
else if (is.data.frame(input)==TRUE)
cat (input)
else ("Your variable  is neither a matrix nor a dataframe \n")
test_func<- function (input)
if (is.matrix(input)==TRUE)
cat("Your variable " input " is a matrix")
else if (is.data.frame(input)==TRUE)
cat (input)
else
("Your variable  is neither a matrix nor a dataframe \n")
test_func<- function (input)
if (is.matrix(input)==TRUE)
cat("Your variable is a matrix")
else if (is.data.frame(input)==TRUE)
cat ("Your variable is a data frame")
else
("Your variable  is neither a matrix nor a dataframe \n")
test_func<- function (input)
if (is.matrix(input)==TRUE)
cat("Your variable is a matrix")
else if (is.data.frame(input)==TRUE)
cat ("Your variable is a data frame" "\n")
else
("Your variable  is neither a matrix nor a dataframe \n")
test_func<- function (input)
if (is.matrix(input)==TRUE)
cat("Your variable is a matrix")
else if(is.data.frame(input)==TRUE)
cat ("Your variable is a data frame")
test_func<- function (input)
if (is.matrix(input)==TRUE)
cat("Your variable is a matrix")
else(is.data.frame(input)==TRUE)
cat ("Your variable is a data frame")
est_func<- function (input)
if (is.matrix(input)==TRUE)
cat("Your variable is a matrix")
else if(is.data.frame(input)==TRUE)
cat ("Your variable is a data frame")
test_func<- function (input)
if (is.matrix(input)==TRUE)
cat("Your variable is a matrix")
else
cat ("Your variable is not a matrix")
test_func<- function (input)
{
if (is.matrix(input)==TRUE)
{
cat("Your variable is a matrix")
}
else
cat ("Your variable is not a matrix")
}
test_func<- function (input)
{
if (is.matrix(input)==TRUE)
{
cat("Your variable is a matrix")
}
else if (is.data.frame(input)==TRUE)
cat ("Your variable is a dataframe")
else
cat ("Your variable is neither a matrix nor a data frame")
}
test_func(pressure)
test_func(input = mtcars)
test_func(input = as.matrix(pressure))
save.image(".RData")
q()
install.packages("ggthemes")
install.packages("ggspatial")
library(sf)
India_States<- read_sf(dsn = "Shapefiles/india/India_States.shp")
View(India_States)
library(ggplot2)
library(ggspatial)
library(ggthemes)
library(sf )
ggplot()+geom_sf(data = India_States)
library(readxl)
Primary_Census_Abstract_Total_Table_For_India <- read_excel("Shapefiles/india/Primary Census Abstract Total Table For India.xlsx")
View(Primary_Census_Abstract_Total_Table_For_India)
View(Primary_Census_Abstract_Total_Table_For_India)
###choropleth plotting using Census Data
#Import census data in R environment using read_excel()
#Import Shapefile data using read_sf()
#Subset the PCA data to our requirement
subset(x = Primary_Census_Abstract_Total_Table_For_India, subset = TRU==Total&Name!=India)
###choropleth plotting using Census Data
#Import census data in R environment using read_excel()
#Import Shapefile data using read_sf()
#Subset the PCA data to our requirement
subset(x = Primary_Census_Abstract_Total_Table_For_India, subset = TRU=="Total"&Name!="India")
###choropleth plotting using Census Data
#Import census data in R environment using read_excel()
#Import Shapefile data using read_sf()
#Subset the PCA data to our requirement
subset(x = Primary_Census_Abstract_Total_Table_For_India, subset = TRU=="Total"&Leve=="STATE")
###choropleth plotting using Census Data
#Import census data in R environment using read_excel()
#Import Shapefile data using read_sf()
#Subset the PCA data to our requirement
subset(x = Primary_Census_Abstract_Total_Table_For_India, subset = TRU=="Total"&Level=="STATE")
###choropleth plotting using Census Data
#Import census data in R environment using read_excel()
#Import Shapefile data using read_sf()
#Subset the PCA data to our requirement
PCA_Census<- subset(x = Primary_Census_Abstract_Total_Table_For_India, subset = TRU=="Total"&Level=="STATE", select = c("No_HH", "TOT_P", "TOT_M", "TOT_F"))
View(PCA_Census)
###choropleth plotting using Census Data
#Import census data in R environment using read_excel()
#Import Shapefile data using read_sf()
#Subset the PCA data to our requirement
PCA_Census<- subset(x = Primary_Census_Abstract_Total_Table_For_India, subset = TRU=="Total"&Level=="STATE", select = c("Name","No_HH", "TOT_P", "TOT_M", "TOT_F"))
View(PCA_Census)
toupper(India_States$NAME_1)
#PCA data frame and shapefile Attribute data manipulation to facilitate merge with shapefile
India_States$NAME_1<- toupper(India_States$NAME_1)
India_States$NAME_1
fix(PCA_Census)
edit(PCA_Census)
PCA_Census$Name[PCA_Census$Name=="JAMMU & KASHMIR"]<- c("JAMMU AND KASHMIR")
PCA_Census$Name[PCA_Census$Name=="ANDAMAN & NICOBAR ISLANDS"]<- c("ANDAMAN AND NICOBAR ISLANDS")
PCA_Census$Name[PCA_Census$Name=="DADRA & NAGAR HAVELI
"]<- c("DADRA AND NAGAR HAVELI")
PCA_Census$Name[PCA_Census$Name=="DADRA & NAGAR HAVEL"]<- c("DADRA AND NAGAR HAVELI")
PCA_Census$Name[PCA_Census$Name=="DADRA & NAGAR HAVELI"]<- c("DADRA AND NAGAR HAVELI")
PCA_Census$Name[PCA_Census$Name=="DAMAN & DIU"]<- c("DAMAN AND DIU")
View(India_States$NAME_1)
head(India_States$NAME_1)
tail(India_States$NAME_1)
India_States$NAME_1[India_States$NAME_1==grepl("O")]
India_States$NAME_1[India_States$NAME_1==grepl(India_States$NAME_1,"O")]
India_States$NAME_1[India_States$NAME_1==grep("O")]
grep("O", India_States$NAME_1)
grep("Od", India_States$NAME_1)
grep("Or", India_States$NAME_1)
grep("Or*", India_States$NAME_1)
India_States$NAME_1[2]
India_States$NAME_1[12]
India_States$NAME_1[23]
India_States$NAME_1[24]
India_States$NAME_1[26]
PCA_Census$Name[PCA_Census$Name=="ODISHA"]
PCA_Census$Name[PCA_Census$Name=="ODISHA"]<- C("ORISSA")
PCA_Census$Name[PCA_Census$Name=="ODISHA"]<- c("ORISSA")
head(India_States)
#After renaming and data cleaning. Perform Merge
merge.data.frame(x = India_States, y = PCA_Census, by.x = "NAME_1", by.y="Name")
#After renaming and data cleaning. Perform Merge
India_States_2<- merge.data.frame(x = India_States, y = PCA_Census, by.x = "NAME_1", by.y="Name")
View(India_States_2)
coord_sf(India_States_2)
#Retrieve the spatial characteristic of the new dataframe
India_States_2<- st_as_sf(India_States_2)
coord_sf(India_States_2)
coord_sf(India_States_)
coord_sf(India_States)
#Plot the choropleth
ggplot(data = India_States_2)+geom_sf()
head(India_States_2)
#Plot the choropleth
ggplot(data = India_States_2)+geom_sf(mapping = aes(fill=TOT_P))+scale_fill_continuous_tableau(palette = "Blues")+labs("Total Population")
#Plot the choropleth
ggplot(data = India_States_2)+geom_sf(mapping = aes(fill=TOT_P))+scale_fill_continuous_tableau(palette = "Red")+labs("Total Population")
head(India_States_2)
#Plot the choropleth
ggplot(data = India_States_2)+geom_sf(mapping = aes(fill=TOT_F))+scale_fill_continuous_tableau(palette = "Red")+labs("Total Population")
ggplot(data = India_States_2)+geom_sf(mapping = aes(fill=cut_interval(TOT_F, 7)))+labs("Total Population")
ggplot(data = India_States_2)+geom_sf(mapping = aes(fill=cut_interval(TOT_F, 7)))+labs(fill="Total Population")
save.image(".RData")
q()
#plot Boundary + cities
ggplot(data=India_Boundary)+geom_sf()+geom_sf(data = India_Cities)+geom_sf_text(data = India_Cities, mapping = aes(label=city), size=2, nudge_x = -0.2, nudge_y = -0.2)+ annotation_north_arrow(height = unit(2.5 , "cm"), width = unit(1.5, "cm"), pad_x = unit(1, "cm"),pad_y = unit(1.5, "cm")) + annotation_scale(line_width = 1)
library(ggplot2)
library(ggspatial)
library(ggthemes)
library(sf)
#Plot the choropleth
ggplot(data = India_States_2)+geom_sf(mapping = aes(fill=TOT_F))+scale_fill_continuous_tableau(palette = "Red")+labs("Total Population")
#Plot the choropleth
ggplot(data = India_States_2)+geom_sf(mapping = aes(fill=TOT_F))+scale_fill_continuous_tableau(palette = "Red")+labs(fill = "Total Population")
library()
library(dplyr)
library(ggplot2)
library(ggspatial)
library(ggthemes)
library(sf)
#Attribute data selection
Global_Data_UHI<- st_read(dsn = "Shapefiles/india/sdei-global-uhi-2013-shp/sdei-global-uhi-2013-shp/shp/sdei-global-uhi-2013.shp")
#Visualise the data
ggplot(data = Global_Data_UHI)+geom_sf()
View(Global_Data_UHI)
grepl("IND", Global_Data_UHI$ISO3)
subset(x = Global_Data_UHI, subset = grepl("IND", Global_Data_UHI$ISO3))
#Abstract India's data
Indian_HeatIsland<- subset(x = Global_Data_UHI, subset = grepl("IND", Global_Data_UHI$ISO3))
#Visualise Indian abstracted data
ggplot(data = Indian_HeatIsland) +geom_sf()
ggplot(data = Indian_HeatIsland)+geom_sf(mapping = aes(fill = URB_D_MEAN))+scale_fill_continuous_tableau(palette = "Red")+labs(fill = "LST", title = "Average Summer Daytime Max LST", subtitle = "Indian Region")
st_crs(Indian_HeatIsland)
st_bbox(Indian_HeatIsland)
st_bbox(Habitation)
st_crs(Habitation)
st_area(Indian_HeatIsland)
bbox(Indian_HeatIsland)
st_bbox(Indian_HeatIsland)
st_crop(Indian_HeatIsland, xmin = 75, ymin = 15, xmax = 80, ymax=25)
Indian_HeatIsland
Cropped_Indian_UIH<- st_crop(Indian_HeatIsland, xmin = 75, ymin = 15, xmax = 80, ymax=25)
# Does it Crop?
ggplot(data = Cropped_Indian_UIH)+geom_sf()
st_bbox(xmin=76 , ymin=16 , xmax=78 , ymax=22)
st_bbox(obj = Cropped_Indian_UIH, xmin=76 , ymin=16 , xmax=78 , ymax=22)
bbox<- st_bbox(obj = Cropped_Indian_UIH, xmin=76 , ymin=16 , xmax=78 , ymax=22)
st_crop(Indian_HeatIsland, bbox)
Indian_HeatIsland_Cropped<- st_crop(Indian_HeatIsland, bbox)
ggplot(data = Indian_HeatIsland_Cropped)+geom_sf()
#Plot the UIH in the new extents
ggplot(data = Indian_HeatIsland_Cropped)+geom_sf(mapping = aes(fill = URB_D_MEAN))
#Plot the UIH as intervals
ggplot(data = Indian_HeatIsland_Cropped)+geom_sf(mapping = aes(fill = cut_interval(x = URB_D_MEAN, 5)))
#Plot the UIH as intervals
ggplot(data = Indian_HeatIsland_Cropped)+geom_sf(mapping = aes(fill = cut_interval(x = URB_D_MEAN, 5)))+labs(fill = "LST", title = "Average Summer Daytime Max LST", subtitle = "Indian Region")
#Plot the UIH as intervals
ggplot(data = Indian_HeatIsland_Cropped$URB_D_MEAN>40)+geom_sf(mapping = aes(fill = cut_interval(x = URB_D_MEAN, 5)))+labs(fill = "LST", title = "Average Summer Daytime Max LST", subtitle = "Indian Region")
#Plot the UIH as intervals
ggplot(data = Indian_HeatIsland_Cropped$URB_D_MEAN>40)+geom_sf()+labs(fill = "LST", title = "Average Summer Daytime Max LST", subtitle = "Indian Region")
ggplot(data = Indian_HeatIsland_Cropped)+geom_sf(mapping = aes(fill = cut_interval(x = URB_D_MEAN, 5)))+labs(fill = "LST", title = "Average Summer Daytime Max LST", subtitle = "Indian Region")
q()
